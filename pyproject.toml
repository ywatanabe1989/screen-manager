# pyproject.toml
[project]
name = "screen-manager"
version = "0.1.0"
description = "Screen session manager with MCP support"
authors = [
    {name = "Yusuke Watanabe", email = "yusuke.watanabe@scitex.ai"}
]
maintainers = [
    {name = "Yusuke Watanabe", email = "yusuke.watanabe@scitex.ai"}
]
license = "MIT"
readme = "README.md"
keywords = ["debugging", "ipdb", "multi-agent", "mcp", "screen", "session-management", "conditional-debugging", "AI-agents"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Debuggers",
    "Topic :: System :: Shells",
    "Topic :: Communications",
]
requires-python = ">=3.11"
dependencies = [
    "cipdb>=0.1.0",
    "ipdb>=0.13.0",
    "fastmcp>=2.0.0",
    "pexpect>=4.8.0",
    "typing-extensions>=4.0.0",
    "aiofiles>=23.0.0",
    "pytest>=8.0.0",
    "pytest-cov>=5.0.0",
    "pytest-xdist>=3.0.0",
    "pytest-testmon>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/Yusuke Watanabe/screen-manager"
Repository = "https://github.com/Yusuke Watanabe/screen-manager"
Documentation = "https://github.com/Yusuke Watanabe/screen-manager"

[project.optional-dependencies]
dev = [
    "ruff>=0.7.0",
    "mypy>=1.13.0",
    "pytest-cov>=5.0.0",
    "pytest-json-report>=1.5.0",
    "pytest-asyncio>=0.24.0",
    "pytest-watch>=4.2.0",
    "pre-commit>=3.5.0",
    "build>=1.0.0",
    "twine>=5.0.0",
]

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

# ===== Ruff Configuration =====
[tool.ruff]
target-version = "py311"
line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "N",    # pep8-naming
    "SIM",  # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
]
fixable = ["ALL"]
unfixable = []

# Exclude common directories
exclude = [
    ".git",
    ".ruff_cache",
    "__pycache__",
    ".venv",
    "venv",
    "build",
    "dist",
    ".old",
    ".dev",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["screen_manager"]

# ===== MyPy Configuration =====
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Start permissive
ignore_missing_imports = true
files = ["src/screen_manager/**/*.py"]
exclude = ["tests", "examples", ".old", ".dev"]

# ===== Pytest Configuration =====
[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers", 
    "--tb=short",
    "--maxfail=5",
    "--cov=src/screen_manager",
    "--cov-report=term-missing",
    "--cov-report=html:tests/reports/htmlcov",
    "--cov-report=json:tests/reports/coverage.json",
    "--cov-fail-under=100",
    "-n=auto",
]
markers = [
    "smoke: Quick smoke tests for CI",
    "slow: Tests that take > 1 second", 
    "integration: Integration tests",
    "asyncio: Async tests that use asyncio",
]

# ===== Coverage Configuration =====
[tool.coverage.run]
source = ["src/screen_manager"]
omit = [
    "*/tests/*",
    "*/examples/*",
    "*/__init__.py",
    "*/setup.py",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false